name: Deploy to Testnets
env:
  GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Protocol release version (test/master/v1/etc.)'
        required: true
        default: 'test'
      use_npm_package:
        description: 'Use NPM package of specific version instead of building'
        required: false
        default: ""
      only_network:
        description: 'Only a specific network is to be deployed'
        required: false

jobs:

  deploy-to-testnets:
    name: Deploy to testnets

    runs-on: ubuntu-latest

    env:
      RELEASE_VERSION: ${{ github.event.inputs.release_version }}
      DEFAULT_MNEMONIC: ${{ secrets.BUILD_AGENT_MNEMONIC  }}
      # network web3 providers  
      ETH_GOERLI_PROVIDER_URL: ${{ secrets.ETH_GOERLI_PROVIDER_URL }}
      ETH_RINKEBY_PROVIDER_URL: ${{ secrets.ETH_RINKEBY_PROVIDER_URL }}
      ETH_ROPSTEN_PROVIDER_URL: ${{ secrets.ETH_ROPSTEN_PROVIDER_URL }}
      ETH_KOVAN_PROVIDER_URL: ${{ secrets.ETH_KOVAN_PROVIDER_URL }}
      POLYGON_MUMBAI_PROVIDER_URL: ${{ secrets.POLYGON_MUMBAI_PROVIDER_URL }}
      XDAI_MAINNET_PROVIDER_URL: ${{ secrets.XDAI_MAINNET_PROVIDER_URL }}
      POLYGON_MAINNET_PROVIDER_URL: ${{ secrets.POLYGON_MAINNET_PROVIDER_URL }}
      OPTIMISM_KOVAN_PROVIDER_URL: ${{ secrets.OPTIMISM_KOVAN_PROVIDER_URL }}
      ARBITRUM_RINKEBY_PROVIDER_URL: ${{ secrets.ARBITRUM_RINKEBY_PROVIDER_URL }}
      AVALANCHE_FUJI_PROVIDER_URL: ${{ secrets.AVALANCHE_FUJI_PROVIDER_URL }}

    strategy:
      fail-fast: false
      matrix:
          network: [eth-goerli, eth-rinkeby, eth-ropsten, eth-kovan, polygon-mumbai, optimism-kovan, arbitrum-rinkeby, avalanche-fuji]

    steps:
      - uses: actions/checkout@v2

      - name: Check only_network
        if: ${{ github.event.inputs.only_network != '' && github.event.inputs.only_network != matrix.network }}
        run: echo "DO_SKIP=1" >> $GITHUB_ENV

      - name: Use Node.js 14.x
        if: env.DO_SKIP != 1
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Build and deploy to ${{ matrix.network }}
        if: ${{ env.DO_SKIP != 1 && github.event.inputs.use_npm_package == "" }}
        run: |
          yarn install --frozen-lockfile
          yarn build
          cd packages/ethereum-contracts
          npx truffle exec --network ${{ matrix.network }} scripts/deploy-test-environment.js

      - name: Download NPM package and deploy to ${{ matrix.network }}
        if: ${{ env.DO_SKIP != 1 && github.event.inputs.use_npm_package != "" }}
        run: |
          cd packages/ethereum-contracts
          cp ../../.npmrc.template .npmrc # use github package registry
          yarn install @superfluid-finance/ethereum-contracts@${{github.event.inputs.use_npm_package}}
          export DISABLE_NATIVE_TRUFFLE=1
          npx truffle exec --network ${{ matrix.network }} node_moduels/scripts/@superfluid-finance/ethereum-contracts/deploy-test-environment.js

      - name: Etherscan verification of ${{ matrix.network }} deployment
        if: env.DO_SKIP != 1
        run: |
          cd packages/ethereum-contracts
          npx truffle exec --network ${{ matrix.network }} scripts/info-print-contract-addresses.js : addresses.vars
          source addresses.vars
          source tasks/etherscan-verify-framework.sh ${{ matrix.network }}
        env:
          ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
          POLYGONSCAN_API_KEY: ${{ secrets.POLYGONSCAN_API_KEY }}
          SNOWTRACE_API_KEY: ${{ secrets.SNOWTRACE_API_KEY }}
